var Lengths = {
  paddingLeft: 12,
  nodeWidth: 180,
  statusHeight: 18
};

var Sizes = {
  buttonSize: {
    width: 40,
    height: 48
  },
  contentSize: {
    width: Lengths.nodeWidth,
    // height: 101 // This is the height w/o info comp
    height: 42
  },
  childContentSize: {
    width: Lengths.nodeWidth,
    height: 60
  },
  nodeSize: {
    width: Lengths.nodeWidth,
    // height: 156
    height: 90
  },
  nodeSizeWithChildren: {
    width: Lengths.nodeWidth,
    // height: 276
    height: 176
  }
};

var Points = {
  buttonPosition: {
    x: Lengths.nodeWidth - Sizes.buttonSize.width,
    y: 0
  },
  contentPosition: {
    x: 0,
    y: Sizes.buttonSize.height
  },
  infoPosition: {
    x: Lengths.paddingLeft,
    y: 11
  },
  metricsPosition: {
    x: Lengths.paddingLeft,
    y: 41
  },
  subtitlePosition: {
    x: Lengths.paddingLeft,
    y: 23
  }
};

var Rects = {
  // X, y, width, height
  buttonRect: Object.assign({}, Sizes.buttonSize, Points.buttonPosition),
  contentRect: Object.assign({}, Sizes.contentSize, Points.contentPosition),
  childContentRect: Object.assign({}, Sizes.childContentSize, Points.contentPosition),
  // Top, bottom, left, right - from 'centre'
  nodeRect: Object.assign({}, Sizes.nodeSize, {
    left: -Sizes.nodeSize.width / 2,
    right: Sizes.nodeSize.width / 2,
    top: -Sizes.nodeSize.height / 2,
    bottom: Sizes.nodeSize.height / 2
  }),
  nodeRectWithChildren: Object.assign({}, Sizes.nodeSizeWithChildren, {
    left: -Sizes.nodeSizeWithChildren.width / 2,
    right: Sizes.nodeSizeWithChildren.width / 2,
    top: -Sizes.nodeSizeWithChildren.height / 2 + Sizes.contentSize.height / 3,
    bottom: Sizes.nodeSizeWithChildren.height / 2 + Sizes.contentSize.height / 3
  })
};

var Constants = Object.assign({}, Lengths, Sizes, Points, Rects);

export default Constants;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy9jb25zdGFudHMuanMiXSwibmFtZXMiOlsiTGVuZ3RocyIsInBhZGRpbmdMZWZ0Iiwibm9kZVdpZHRoIiwic3RhdHVzSGVpZ2h0IiwiU2l6ZXMiLCJidXR0b25TaXplIiwid2lkdGgiLCJoZWlnaHQiLCJjb250ZW50U2l6ZSIsImNoaWxkQ29udGVudFNpemUiLCJub2RlU2l6ZSIsIm5vZGVTaXplV2l0aENoaWxkcmVuIiwiUG9pbnRzIiwiYnV0dG9uUG9zaXRpb24iLCJ4IiwieSIsImNvbnRlbnRQb3NpdGlvbiIsImluZm9Qb3NpdGlvbiIsIm1ldHJpY3NQb3NpdGlvbiIsInN1YnRpdGxlUG9zaXRpb24iLCJSZWN0cyIsImJ1dHRvblJlY3QiLCJjb250ZW50UmVjdCIsImNoaWxkQ29udGVudFJlY3QiLCJub2RlUmVjdCIsImxlZnQiLCJyaWdodCIsInRvcCIsImJvdHRvbSIsIm5vZGVSZWN0V2l0aENoaWxkcmVuIiwiQ29uc3RhbnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxJQUFNQSxVQUFVO0FBQ2RDLGVBQWEsRUFEQztBQUVkQyxhQUFXLEdBRkc7QUFHZEMsZ0JBQWM7QUFIQSxDQUFoQjs7QUFNQSxJQUFNQyxRQUFRO0FBQ1pDLGNBQVk7QUFDVkMsV0FBTyxFQURHO0FBRVZDLFlBQVE7QUFGRSxHQURBO0FBS1pDLGVBQWE7QUFDWEYsV0FBT04sUUFBUUUsU0FESjtBQUVYO0FBQ0FLLFlBQVE7QUFIRyxHQUxEO0FBVVpFLG9CQUFrQjtBQUNoQkgsV0FBT04sUUFBUUUsU0FEQztBQUVoQkssWUFBUTtBQUZRLEdBVk47QUFjWkcsWUFBVTtBQUNSSixXQUFPTixRQUFRRSxTQURQO0FBRVI7QUFDQUssWUFBUTtBQUhBLEdBZEU7QUFtQlpJLHdCQUFzQjtBQUNwQkwsV0FBT04sUUFBUUUsU0FESztBQUVwQjtBQUNBSyxZQUFRO0FBSFk7QUFuQlYsQ0FBZDs7QUEwQkEsSUFBTUssU0FBUztBQUNiQyxrQkFBZ0I7QUFDZEMsT0FBR2QsUUFBUUUsU0FBUixHQUFvQkUsTUFBTUMsVUFBTixDQUFpQkMsS0FEMUI7QUFFZFMsT0FBRztBQUZXLEdBREg7QUFLYkMsbUJBQWlCO0FBQ2ZGLE9BQUcsQ0FEWTtBQUVmQyxPQUFHWCxNQUFNQyxVQUFOLENBQWlCRTtBQUZMLEdBTEo7QUFTYlUsZ0JBQWM7QUFDWkgsT0FBR2QsUUFBUUMsV0FEQztBQUVaYyxPQUFHO0FBRlMsR0FURDtBQWFiRyxtQkFBaUI7QUFDZkosT0FBR2QsUUFBUUMsV0FESTtBQUVmYyxPQUFHO0FBRlksR0FiSjtBQWlCYkksb0JBQWtCO0FBQ2hCTCxPQUFHZCxRQUFRQyxXQURLO0FBRWhCYyxPQUFHO0FBRmE7QUFqQkwsQ0FBZjs7QUF1QkEsSUFBTUssUUFBUTtBQUNaO0FBQ0FDLGdDQUNLakIsTUFBTUMsVUFEWCxFQUVLTyxPQUFPQyxjQUZaLENBRlk7QUFNWlMsaUNBQ0tsQixNQUFNSSxXQURYLEVBRUtJLE9BQU9JLGVBRlosQ0FOWTtBQVVaTyxzQ0FDS25CLE1BQU1LLGdCQURYLEVBRUtHLE9BQU9JLGVBRlosQ0FWWTtBQWNaO0FBQ0FRLDhCQUNLcEIsTUFBTU0sUUFEWDtBQUVFZSxVQUFNLENBQUNyQixNQUFNTSxRQUFOLENBQWVKLEtBQWhCLEdBQXdCLENBRmhDO0FBR0VvQixXQUFPdEIsTUFBTU0sUUFBTixDQUFlSixLQUFmLEdBQXVCLENBSGhDO0FBSUVxQixTQUFLLENBQUN2QixNQUFNTSxRQUFOLENBQWVILE1BQWhCLEdBQXlCLENBSmhDO0FBS0VxQixZQUFReEIsTUFBTU0sUUFBTixDQUFlSCxNQUFmLEdBQXdCO0FBTGxDLElBZlk7QUFzQlpzQiwwQ0FDS3pCLE1BQU1PLG9CQURYO0FBRUVjLFVBQU0sQ0FBQ3JCLE1BQU1PLG9CQUFOLENBQTJCTCxLQUE1QixHQUFvQyxDQUY1QztBQUdFb0IsV0FBT3RCLE1BQU1PLG9CQUFOLENBQTJCTCxLQUEzQixHQUFtQyxDQUg1QztBQUlFcUIsU0FBSyxDQUFDdkIsTUFBTU8sb0JBQU4sQ0FBMkJKLE1BQTVCLEdBQXFDLENBQXJDLEdBQXlDSCxNQUFNSSxXQUFOLENBQWtCRCxNQUFsQixHQUEyQixDQUozRTtBQUtFcUIsWUFBUXhCLE1BQU1PLG9CQUFOLENBQTJCSixNQUEzQixHQUFvQyxDQUFwQyxHQUF3Q0gsTUFBTUksV0FBTixDQUFrQkQsTUFBbEIsR0FBMkI7QUFMN0U7QUF0QlksQ0FBZDs7QUErQkEsSUFBTXVCLDhCQUNEOUIsT0FEQyxFQUVESSxLQUZDLEVBR0RRLE1BSEMsRUFJRFEsS0FKQyxDQUFOOztBQU9BLGVBQWVVLFNBQWYiLCJmaWxlIjoiY29uc3RhbnRzLmpzIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgTGVuZ3RocyA9IHtcbiAgcGFkZGluZ0xlZnQ6IDEyLFxuICBub2RlV2lkdGg6IDE4MCxcbiAgc3RhdHVzSGVpZ2h0OiAxOFxufTtcblxuY29uc3QgU2l6ZXMgPSB7XG4gIGJ1dHRvblNpemU6IHtcbiAgICB3aWR0aDogNDAsXG4gICAgaGVpZ2h0OiA0OFxuICB9LFxuICBjb250ZW50U2l6ZToge1xuICAgIHdpZHRoOiBMZW5ndGhzLm5vZGVXaWR0aCxcbiAgICAvLyBoZWlnaHQ6IDEwMSAvLyBUaGlzIGlzIHRoZSBoZWlnaHQgdy9vIGluZm8gY29tcFxuICAgIGhlaWdodDogNDJcbiAgfSxcbiAgY2hpbGRDb250ZW50U2l6ZToge1xuICAgIHdpZHRoOiBMZW5ndGhzLm5vZGVXaWR0aCxcbiAgICBoZWlnaHQ6IDYwXG4gIH0sXG4gIG5vZGVTaXplOiB7XG4gICAgd2lkdGg6IExlbmd0aHMubm9kZVdpZHRoLFxuICAgIC8vIGhlaWdodDogMTU2XG4gICAgaGVpZ2h0OiA5MFxuICB9LFxuICBub2RlU2l6ZVdpdGhDaGlsZHJlbjoge1xuICAgIHdpZHRoOiBMZW5ndGhzLm5vZGVXaWR0aCxcbiAgICAvLyBoZWlnaHQ6IDI3NlxuICAgIGhlaWdodDogMTc2XG4gIH1cbn07XG5cbmNvbnN0IFBvaW50cyA9IHtcbiAgYnV0dG9uUG9zaXRpb246IHtcbiAgICB4OiBMZW5ndGhzLm5vZGVXaWR0aCAtIFNpemVzLmJ1dHRvblNpemUud2lkdGgsXG4gICAgeTogMFxuICB9LFxuICBjb250ZW50UG9zaXRpb246IHtcbiAgICB4OiAwLFxuICAgIHk6IFNpemVzLmJ1dHRvblNpemUuaGVpZ2h0XG4gIH0sXG4gIGluZm9Qb3NpdGlvbjoge1xuICAgIHg6IExlbmd0aHMucGFkZGluZ0xlZnQsXG4gICAgeTogMTFcbiAgfSxcbiAgbWV0cmljc1Bvc2l0aW9uOiB7XG4gICAgeDogTGVuZ3Rocy5wYWRkaW5nTGVmdCxcbiAgICB5OiA0MVxuICB9LFxuICBzdWJ0aXRsZVBvc2l0aW9uOiB7XG4gICAgeDogTGVuZ3Rocy5wYWRkaW5nTGVmdCxcbiAgICB5OiAyM1xuICB9XG59O1xuXG5jb25zdCBSZWN0cyA9IHtcbiAgLy8gWCwgeSwgd2lkdGgsIGhlaWdodFxuICBidXR0b25SZWN0OiB7XG4gICAgLi4uU2l6ZXMuYnV0dG9uU2l6ZSxcbiAgICAuLi5Qb2ludHMuYnV0dG9uUG9zaXRpb25cbiAgfSxcbiAgY29udGVudFJlY3Q6IHtcbiAgICAuLi5TaXplcy5jb250ZW50U2l6ZSxcbiAgICAuLi5Qb2ludHMuY29udGVudFBvc2l0aW9uXG4gIH0sXG4gIGNoaWxkQ29udGVudFJlY3Q6IHtcbiAgICAuLi5TaXplcy5jaGlsZENvbnRlbnRTaXplLFxuICAgIC4uLlBvaW50cy5jb250ZW50UG9zaXRpb25cbiAgfSxcbiAgLy8gVG9wLCBib3R0b20sIGxlZnQsIHJpZ2h0IC0gZnJvbSAnY2VudHJlJ1xuICBub2RlUmVjdDoge1xuICAgIC4uLlNpemVzLm5vZGVTaXplLFxuICAgIGxlZnQ6IC1TaXplcy5ub2RlU2l6ZS53aWR0aCAvIDIsXG4gICAgcmlnaHQ6IFNpemVzLm5vZGVTaXplLndpZHRoIC8gMixcbiAgICB0b3A6IC1TaXplcy5ub2RlU2l6ZS5oZWlnaHQgLyAyLFxuICAgIGJvdHRvbTogU2l6ZXMubm9kZVNpemUuaGVpZ2h0IC8gMlxuICB9LFxuICBub2RlUmVjdFdpdGhDaGlsZHJlbjoge1xuICAgIC4uLlNpemVzLm5vZGVTaXplV2l0aENoaWxkcmVuLFxuICAgIGxlZnQ6IC1TaXplcy5ub2RlU2l6ZVdpdGhDaGlsZHJlbi53aWR0aCAvIDIsXG4gICAgcmlnaHQ6IFNpemVzLm5vZGVTaXplV2l0aENoaWxkcmVuLndpZHRoIC8gMixcbiAgICB0b3A6IC1TaXplcy5ub2RlU2l6ZVdpdGhDaGlsZHJlbi5oZWlnaHQgLyAyICsgU2l6ZXMuY29udGVudFNpemUuaGVpZ2h0IC8gMyxcbiAgICBib3R0b206IFNpemVzLm5vZGVTaXplV2l0aENoaWxkcmVuLmhlaWdodCAvIDIgKyBTaXplcy5jb250ZW50U2l6ZS5oZWlnaHQgLyAzXG4gIH1cbn07XG5cbmNvbnN0IENvbnN0YW50cyA9IHtcbiAgLi4uTGVuZ3RocyxcbiAgLi4uU2l6ZXMsXG4gIC4uLlBvaW50cyxcbiAgLi4uUmVjdHNcbn07XG5cbmV4cG9ydCBkZWZhdWx0IENvbnN0YW50cztcbiJdfQ==